package exemplo.rpc.hello;
//Generated by Netbula JRPCGEN V2.5.6.
//Netbula JavaRPC demo, expires after a fixed date!

import netbula.ORPC.*;

public class hello_cln extends ClientGeneric implements hello {

    /**
    Construct an RPC client that is not bound to any server
     */
    public hello_cln() throws rpc_err {
    }

    ;

	/**
	Construct an RPC client object connected to a server
	on the specified host with the specified protocol

	@param host server hostname, or URL of the RPC proxy if http is used
	@param proto protocol, can be "tcp", "udp" or "http"
	*/
	public hello_cln(String host, String proto) throws rpc_err {
        super(host, hello._def_pno, hello._def_vno, proto);
    }

    /**
    Construct an RPC client object connected to a server
    on the specified host with the specified protocol and port number
    
    @param host server hostname
    @param proto protocol, can be "tcp" or "udp"
    @param port server's fixed port number
     */
    public hello_cln(String host, String proto, int port) throws rpc_err {
        super(host, proto, port, hello._def_pno, hello._def_vno);
    }

    /**
    Construct an RPC client object connected to a server
    on the specified host with the specified program number,version and protocol
    
    @param host server hostname, or URL of RPC proxy
    @param proto protocol, can be "tcp", "udp" or "http"
    @param prog server's program number
    @param ver server's version number
     */
    public hello_cln(String host, int prog, int ver, String proto) throws rpc_err {
        super(host, prog, ver, proto);
    }

    public String sendHello(String in_arg) throws rpc_err {
        XDTString _in_arg = new XDTString();
        _in_arg.value = in_arg;
        XDTString _out_arg = new XDTString();
        getClient().call(hello._sendHello_proc, _in_arg, _out_arg);
        return _out_arg.value;
    }
}
